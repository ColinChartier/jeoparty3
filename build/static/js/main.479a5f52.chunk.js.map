{"version":3,"sources":["constants/GameState.js","context/socket.js","components/BrowserBoard.jsx","components/BrowserLobby.jsx","components/MobileWrapper.jsx","components/MobileBoard.jsx","components/MobileLobby.jsx","Game.js","index.js"],"names":["exports","GameState","LOBBY","BOARD","CLOSED_CLUE","OPEN_CLUE","DECISION","ANSWER","SCOREBOARD","socket","io","SocketContext","createContext","BrowserBoard","useState","categories","setCategories","useContext","on","categoryTitleRow","map","category","categoryTitle","Col","lg","Container","fluid","Row","className","BrowserLobby","sessionName","setSessionName","MobileWrapper","props","alert","children","MobileBoard","MobileLobby","handleJoinSession","useCallback","emit","InputGroup","FormControl","value","onChange","e","target","aria-describedby","Prepend","Button","onClick","variant","Game","gameState","setGameState","newGameState","browserView","mobileView","Provider","test","navigator","userAgent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.479a5f52.chunk.js","sourcesContent":["// functions like an enum\nexports.GameState = {\n    LOBBY: 'lobby',\n    BOARD: 'board',\n    CLOSED_CLUE: 'closedClue',\n    OPEN_CLUE: 'openClue',\n    DECISION: 'decision',\n    ANSWER: 'answer',\n    SCOREBOARD: 'scoreboard'\n};\n","import React, { createContext } from \"react\";\nimport io from 'socket.io-client';\n\nexport const socket = io();\nexport const SocketContext = createContext();\n","import React, {useContext, useState} from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport {SocketContext} from '../context/socket';\n\nimport '../stylesheets/BrowserBoard.css';\n\nconst BrowserBoard = () => {\n    const [categories, setCategories] = useState([]);\n    const socket = useContext(SocketContext);\n\n    socket.on('categories', (categories) => {\n        setCategories(categories);\n    });\n\n    let categoryTitleRow = categories.map((category) => {\n        let categoryTitle = category['title'];\n\n        return (\n            <Col lg={'2'}>\n                {categoryTitle}\n            </Col>\n        );\n    });\n\n    return (\n        <Container fluid>\n            <Row className={'board-row'}>\n                {categoryTitleRow}\n            </Row>\n        </Container>\n    );\n};\n\nexport default BrowserBoard;\n","import React, {useContext, useState } from \"react\";\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport {SocketContext} from '../context/socket';\n\nimport '../stylesheets/Game.css';\nimport '../stylesheets/BrowserLobby.css';\n\nconst BrowserLobby = () => {\n    const [sessionName, setSessionName] = useState('');\n    const socket = useContext(SocketContext);\n\n    socket.on('session_name', (sessionName) => {\n        setSessionName(sessionName);\n    });\n\n    return (\n        <Container fluid className={'browser-lobby'}>\n            <Row className={'align-self-center text-center'}>\n                <Col lg={'12'}>\n                    <h1>Jeoparty! 3</h1>\n                </Col>\n            </Row>\n\n            <Row className={'text-center'}>\n                <Col lg={'12'}>\n                    <span>Session name: {sessionName}</span>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default BrowserLobby;\n","import React, {useContext} from \"react\";\n\nimport {SocketContext} from '../context/socket';\n\nconst MobileWrapper = (props) => {\n    const socket = useContext(SocketContext);\n\n    socket.on('disconnect', () => {\n        alert(`You've been disconnected!`);\n    });\n\n    return (\n        <div>\n            {props.children}\n        </div>\n    );\n};\n\nexport default MobileWrapper;\n","import React from \"react\";\n\nconst MobileBoard = () => {\n    return (\n        <div>\n            Welcome to the mobile board!\n        </div>\n    );\n};\n\nexport default MobileBoard;\n","import React, { useContext, useCallback, useState } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\n\nimport {SocketContext} from '../context/socket';\n\nconst MobileLobby = () => {\n    const [sessionName, setSessionName] = useState('');\n    const socket = useContext(SocketContext);\n\n    const handleJoinSession = useCallback((sessionName) => {\n        socket.emit('join_session', sessionName);\n    }, []);\n\n    socket.on('join_session_success', (sessionName) => {\n        alert(`You joined session (${sessionName})`);\n\n        setSessionName('');\n    });\n\n    socket.on('join_session_failure', (sessionName) => {\n        alert(`Couldn't find session (${sessionName})`);\n\n        setSessionName('');\n    });\n\n    return (\n        <Container fluid>\n            <Row className={'text-center'}>\n                <Col lg={'12'}>\n                    Welcome to the mobile lobby!\n\n                    <InputGroup className='mb-3'>\n                        <FormControl value={sessionName} onChange={e => setSessionName(e.target.value)} aria-describedby='basic-addon1' />\n                        <InputGroup.Prepend>\n                            <Button onClick={() => handleJoinSession(sessionName)} variant='outline-secondary'>Join</Button>\n                        </InputGroup.Prepend>\n                    </InputGroup>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default MobileLobby;\n","import React, { useState } from 'react';\nimport {BrowserView, MobileView} from 'react-device-detect';\n\nimport BrowserBoard from './components/BrowserBoard';\nimport BrowserLobby from './components/BrowserLobby';\n\nimport MobileWrapper from \"./components/MobileWrapper\";\nimport MobileBoard from './components/MobileBoard';\nimport MobileLobby from './components/MobileLobby';\n\nimport { GameState } from './constants/GameState';\nimport {SocketContext, socket} from './context/socket';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './stylesheets/Game.css';\n\nconst Game = () => {\n    const [gameState, setGameState] = useState(GameState.LOBBY);\n\n    socket.on('set_game_state', (newGameState) => {\n        setGameState(newGameState);\n    });\n\n    let browserView = null;\n    let mobileView = null;\n\n    switch (gameState) {\n        case GameState.LOBBY:\n            browserView = <BrowserLobby />;\n            mobileView = <MobileLobby />;\n            break;\n        case GameState.BOARD:\n            browserView = <BrowserBoard />;\n            mobileView = <MobileBoard />;\n            break;\n        default:\n            browserView = <BrowserLobby />;\n            mobileView = <MobileLobby />;\n            break;\n    }\n\n    return (\n        <SocketContext.Provider value={socket}>\n            <BrowserView>\n                {browserView}\n            </BrowserView>\n\n            <MobileView>\n                <MobileWrapper>\n                    {mobileView}\n                </MobileWrapper>\n            </MobileView>\n        </SocketContext.Provider>\n    );\n};\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './Game';\n\nimport {socket} from './context/socket';\n\nsocket.on('connect_device', () => {\n    socket.emit('connect_device', /Mobi/.test(navigator.userAgent));\n});\n\nReactDOM.render(<Game />, document.getElementById('root'));\n"],"sourceRoot":""}