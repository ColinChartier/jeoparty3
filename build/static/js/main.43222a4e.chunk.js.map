{"version":3,"sources":["constants/GameState.js","context/socket.js","components/BrowserBoard.jsx","components/BrowserLobby.jsx","components/MobileWrapper.jsx","components/MobileBoard.jsx","components/MobileLobby.jsx","Game.js","index.js"],"names":["exports","GameState","LOBBY","BOARD","CLOSED_CLUE","OPEN_CLUE","DECISION","ANSWER","SCOREBOARD","socket","io","SocketContext","createContext","BrowserBoard","useState","categories","setCategories","useContext","useEffect","on","categoryTitleRow","map","category","categoryTitle","Col","lg","clueRows","Array","from","length","_","i","value","dollarValue","clueCols","keys","Row","className","Container","fluid","BrowserLobby","sessionName","setSessionName","MobileWrapper","props","alert","children","MobileBoard","MobileLobby","MobileLobbyState","mobileLobbyState","setMobileLobbyState","handleJoinSession","useCallback","emit","InputGroup","FormControl","onChange","e","target","aria-describedby","Prepend","Button","onClick","variant","Game","gameState","setGameState","newGameState","browserView","mobileView","Provider","test","navigator","userAgent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43222a4e.chunk.js","sourcesContent":["// enum\nexports.GameState = {\n    LOBBY: 'lobby',\n    BOARD: 'board',\n    CLOSED_CLUE: 'closedClue',\n    OPEN_CLUE: 'openClue',\n    DECISION: 'decision',\n    ANSWER: 'answer',\n    SCOREBOARD: 'scoreboard'\n};\n","import React, { createContext } from \"react\";\nimport io from 'socket.io-client';\n\nexport const socket = io();\nexport const SocketContext = createContext();\n","import React, {useContext, useState, useEffect} from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport {SocketContext} from '../context/socket';\n\nimport '../stylesheets/BrowserBoard.css';\n\nconst BrowserBoard = () => {\n    const NUM_CATEGORIES = 6;\n    const NUM_CLUES = 5;\n\n    const [categories, setCategories] = useState([]);\n    const socket = useContext(SocketContext);\n\n    useEffect(() => {\n        socket.on('categories', (categories) => {\n            setCategories(categories);\n        });\n    }, []);\n\n    let categoryTitleRow = categories.map((category) => {\n        let categoryTitle = category['title'];\n\n        return (\n            <Col lg={'2'}>\n                {categoryTitle}\n            </Col>\n        );\n    });\n\n    let clueRows = Array.from({length: NUM_CLUES}, (_, i) => i + 1).map((value) => {\n        let dollarValue = value * 200;\n\n        let clueCols = Array.from(Array(NUM_CATEGORIES).keys()).map(() => {\n            return (\n                <Col lg={'2'}>\n                    {dollarValue}\n                </Col>\n            );\n        });\n\n        return (\n            <Row className={'board-row'}>\n                {clueCols}\n            </Row>\n        );\n    });\n\n    return (\n        <Container fluid>\n            <Row className={'board-row'}>\n                {categoryTitleRow}\n            </Row>\n\n            {clueRows}\n        </Container>\n    );\n};\n\nexport default BrowserBoard;\n","import React, {useContext, useState, useEffect } from \"react\";\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport {SocketContext} from '../context/socket';\n\nimport '../stylesheets/Game.css';\nimport '../stylesheets/BrowserLobby.css';\n\nconst BrowserLobby = () => {\n    const [sessionName, setSessionName] = useState('');\n    const socket = useContext(SocketContext);\n\n    useEffect(() => {\n        socket.on('session_name', (sessionName) => {\n            setSessionName(sessionName);\n        });\n    }, []);\n\n    return (\n        <Container fluid className={'browser-lobby'}>\n            <Row className={'align-self-center text-center'}>\n                <Col lg={'12'}>\n                    <h1>Jeoparty! 3</h1>\n                </Col>\n            </Row>\n\n            <Row className={'text-center'}>\n                <Col lg={'12'}>\n                    <span>Session name: {sessionName}</span>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default BrowserLobby;\n","import React, { useContext, useEffect } from \"react\";\n\nimport {SocketContext} from '../context/socket';\n\nconst MobileWrapper = (props) => {\n    const socket = useContext(SocketContext);\n\n    useEffect(() => {\n        socket.on('disconnect', () => {\n            alert(`You've been disconnected!`);\n        });\n    }, []);\n\n    return (\n        <div>\n            {props.children}\n        </div>\n    );\n};\n\nexport default MobileWrapper;\n","import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst MobileBoard = () => {\n    return (\n        <Container fluid>\n            <Row className={'text-center'}>\n                <Col lg={'12'}>\n                    Welcome to the mobile board!\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default MobileBoard;\n","import React, { useContext, useCallback, useState, useEffect } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\n\nimport {SocketContext} from '../context/socket';\n\nconst MobileLobby = () => {\n    const MobileLobbyState = {\n        SESSION_NAME: 'sessionName',\n        SIGNATURE: 'signature',\n        WAITING: 'waiting'\n    };\n\n    const [sessionName, setSessionName] = useState('');\n    const [mobileLobbyState, setMobileLobbyState] = useState(MobileLobbyState.SESSION_NAME);\n    const socket = useContext(SocketContext);\n\n    const handleJoinSession = useCallback((sessionName) => {\n        socket.emit('join_session', sessionName);\n    }, []);\n\n    useEffect(() => {\n        socket.on('join_session_success', (sessionName) => {\n            alert(`You joined session (${sessionName})`);\n\n            setSessionName('');\n            setMobileLobbyState(MobileLobbyState.SIGNATURE);\n        });\n\n        socket.on('join_session_failure', (sessionName) => {\n            alert(`Couldn't find session (${sessionName})`);\n\n            setSessionName('');\n        });\n    }, []);\n\n    return (\n        <Container fluid>\n            {\n                mobileLobbyState === MobileLobbyState.SESSION_NAME &&\n                <Row className={'text-center'}>\n                    <Col lg={'12'}>\n                        Welcome to the mobile lobby!\n\n                        <InputGroup className='mb-3'>\n                            <FormControl value={sessionName} onChange={e => setSessionName(e.target.value)} aria-describedby='basic-addon1' />\n                            <InputGroup.Prepend>\n                                <Button onClick={() => handleJoinSession(sessionName)} variant='outline-secondary'>Join</Button>\n                            </InputGroup.Prepend>\n                        </InputGroup>\n                    </Col>\n                </Row>\n            }\n\n            {\n                mobileLobbyState === MobileLobbyState.SIGNATURE &&\n                <Row className={'text-center'}>\n                    <Col lg={'12'}>\n                        You're in a session!\n                    </Col>\n                </Row>\n            }\n\n            {\n                mobileLobbyState === MobileLobbyState.WAITING &&\n                <Row className={'text-center'}>\n                    <Col lg={'12'}>\n                        You're waiting!\n                    </Col>\n                </Row>\n            }\n        </Container>\n    );\n};\n\nexport default MobileLobby;\n","import React, { useState, useEffect } from 'react';\nimport {BrowserView, MobileView} from 'react-device-detect';\n\nimport BrowserBoard from './components/BrowserBoard';\nimport BrowserLobby from './components/BrowserLobby';\n\nimport MobileWrapper from \"./components/MobileWrapper\";\nimport MobileBoard from './components/MobileBoard';\nimport MobileLobby from './components/MobileLobby';\n\nimport { GameState } from './constants/GameState';\nimport {SocketContext, socket} from './context/socket';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './stylesheets/Game.css';\n\nconst Game = () => {\n    const [gameState, setGameState] = useState(GameState.LOBBY);\n\n    useEffect(() => {\n        socket.on('set_game_state', (newGameState) => {\n            setGameState(newGameState);\n        });\n    }, []);\n\n    let browserView = null;\n    let mobileView = null;\n\n    switch (gameState) {\n        case GameState.LOBBY:\n            browserView = <BrowserLobby />;\n            mobileView = <MobileLobby />;\n            break;\n        case GameState.BOARD:\n            browserView = <BrowserBoard />;\n            mobileView = <MobileBoard />;\n            break;\n        default:\n            browserView = <BrowserLobby />;\n            mobileView = <MobileLobby />;\n            break;\n    }\n\n    return (\n        <SocketContext.Provider value={socket}>\n            <BrowserView>\n                {browserView}\n            </BrowserView>\n\n            <MobileView>\n                <MobileWrapper>\n                    {mobileView}\n                </MobileWrapper>\n            </MobileView>\n        </SocketContext.Provider>\n    );\n};\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './Game';\n\nimport {socket} from './context/socket';\n\nsocket.on('connect_device', () => {\n    socket.emit('connect_device', /Mobi/.test(navigator.userAgent));\n});\n\nReactDOM.render(<Game />, document.getElementById('root'));\n"],"sourceRoot":""}