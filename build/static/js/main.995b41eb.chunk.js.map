{"version":3,"sources":["constants/GameState.js","components/BrowserBoard.jsx","context/socket.js","components/BrowserLobby.jsx","components/MobileWrapper.jsx","components/MobileBoard.jsx","components/MobileLobby.jsx","Game.js","index.js"],"names":["exports","GameState","LOBBY","BOARD","CLOSED_CLUE","OPEN_CLUE","DECISION","ANSWER","SCOREBOARD","BrowserBoard","props","categoryTitleRow","categories","map","category","categoryTitle","Col","lg","clueRows","Array","from","length","_","i","value","dollarValue","clueCols","keys","Row","className","Container","fluid","socket","io","SocketContext","createContext","BrowserLobby","useState","sessionName","setSessionName","useContext","handleStartGame","useCallback","emit","useEffect","on","alert","InputGroup","Button","onClick","variant","MobileWrapper","children","MobileBoard","MobileLobby","MobileLobbyState","playerName","setPlayerName","mobileLobbyState","setMobileLobbyState","handleJoinSession","handleSubmitSignature","FormControl","onChange","e","target","aria-describedby","Prepend","Game","gameState","setGameState","setCategories","onAny","event","console","log","newGameState","browserView","mobileView","Provider","test","navigator","userAgent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.995b41eb.chunk.js","sourcesContent":["// enum\nexports.GameState = {\n    LOBBY: 'lobby',\n    BOARD: 'board',\n    CLOSED_CLUE: 'closedClue',\n    OPEN_CLUE: 'openClue',\n    DECISION: 'decision',\n    ANSWER: 'answer',\n    SCOREBOARD: 'scoreboard'\n};\n","import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport '../stylesheets/BrowserBoard.css';\n\nconst BrowserBoard = (props) => {\n    const NUM_CATEGORIES = 6;\n    const NUM_CLUES = 5;\n\n    let categoryTitleRow = props.categories.map((category) => {\n        let categoryTitle = category['title'];\n\n        return (\n            <Col lg={'2'}>\n                {categoryTitle}\n            </Col>\n        );\n    });\n\n    let clueRows = Array.from({length: NUM_CLUES}, (_, i) => i + 1).map((value) => {\n        let dollarValue = value * 200;\n\n        let clueCols = Array.from(Array(NUM_CATEGORIES).keys()).map(() => {\n            return (\n                <Col lg={'2'}>\n                    {dollarValue}\n                </Col>\n            );\n        });\n\n        return (\n            <Row className={'board-row'}>\n                {clueCols}\n            </Row>\n        );\n    });\n\n    return (\n        <Container fluid>\n            <Row className={'board-row'}>\n                {categoryTitleRow}\n            </Row>\n\n            {clueRows}\n        </Container>\n    );\n};\n\nexport default BrowserBoard;\n","import { createContext } from \"react\";\nimport io from 'socket.io-client';\n\nexport const socket = io();\nexport const SocketContext = createContext();\n","import React, {useContext, useState, useEffect, useCallback } from \"react\";\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\n\nimport {SocketContext} from '../context/socket';\n\nimport '../stylesheets/Game.css';\nimport '../stylesheets/BrowserLobby.css';\n\nconst BrowserLobby = () => {\n    const [sessionName, setSessionName] = useState('');\n    const socket = useContext(SocketContext);\n\n    const handleStartGame = useCallback(() => {\n        socket.emit('start_game');\n    }, []);\n\n    useEffect(() => {\n        socket.on('session_name', (sessionName) => {\n            setSessionName(sessionName);\n        });\n\n        socket.on('start_game_failure', () => {\n            alert(`There aren't any players in this session!`);\n        });\n    }, []);\n\n    return (\n        <Container fluid className={'browser-lobby'}>\n            <Row className={'text-center'}>\n                <Col lg={'12'}>\n                    <h1>Jeoparty! 3</h1>\n                </Col>\n\n                <Col lg={'12'}>\n                    <span>Session name: {sessionName}</span>\n                </Col>\n\n                <Col lg={'12'}>\n                    <InputGroup className='mb-3 justify-content-center'>\n                        <Button onClick={() => handleStartGame()} variant='light'>Start Game</Button>\n                    </InputGroup>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default BrowserLobby;\n","import React, { useContext, useEffect } from \"react\";\n\nimport {SocketContext} from '../context/socket';\n\nconst MobileWrapper = (props) => {\n    const socket = useContext(SocketContext);\n\n    useEffect(() => {\n        socket.on('disconnect', () => {\n            alert(`You've been disconnected!`);\n        });\n    });\n\n    return (\n        <div>\n            {props.children}\n        </div>\n    );\n};\n\nexport default MobileWrapper;\n","import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst MobileBoard = () => {\n    return (\n        <Container fluid>\n            <Row className={'text-center'}>\n                <Col lg={'12'}>\n                    Welcome to the mobile board!\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default MobileBoard;\n","import React, { useContext, useCallback, useState, useEffect } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\n\nimport {SocketContext} from '../context/socket';\n\nconst MobileLobby = () => {\n    const MobileLobbyState = {\n        SESSION_NAME: 'sessionName',\n        SIGNATURE: 'signature',\n        WAITING: 'waiting'\n    };\n\n    const [sessionName, setSessionName] = useState('');\n    const [playerName, setPlayerName] = useState('');\n    const [mobileLobbyState, setMobileLobbyState] = useState(MobileLobbyState.SESSION_NAME);\n    const socket = useContext(SocketContext);\n\n    const handleJoinSession = useCallback((sessionName) => {\n        socket.emit('join_session', sessionName);\n    }, []);\n\n    const handleSubmitSignature = useCallback((playerName) => {\n        socket.emit('submit_signature', playerName);\n    }, []);\n\n    useEffect(() => {\n        socket.on('join_session_success', (sessionName) => {\n            alert(`You joined session (${sessionName})`);\n\n            setSessionName('');\n            setMobileLobbyState(MobileLobbyState.SIGNATURE);\n        });\n\n        socket.on('join_session_failure', (sessionName) => {\n            alert(`Couldn't find session (${sessionName})`);\n\n            setSessionName('');\n        });\n\n        socket.on('submit_signature_success', () => {\n            setPlayerName('');\n            setMobileLobbyState(MobileLobbyState.WAITING);\n        });\n\n        socket.on('submit_signature_failure', () => {\n            alert(`That signature was illegal, please try again!`);\n\n            setPlayerName('');\n        });\n\n        socket.on('reconnect', () => {\n            setMobileLobbyState(MobileLobbyState.WAITING);\n        });\n    }, []);\n\n    return (\n        <Container fluid>\n            {\n                mobileLobbyState === MobileLobbyState.SESSION_NAME &&\n                <Row className={'text-center'}>\n                    <Col lg={'12'}>\n                        Welcome to the mobile lobby!\n\n                        <InputGroup className='mb-3'>\n                            <FormControl value={sessionName} onChange={e => setSessionName(e.target.value)} aria-describedby='basic-addon1' />\n                            <InputGroup.Prepend>\n                                <Button onClick={() => handleJoinSession(sessionName)} variant='outline-secondary'>Join</Button>\n                            </InputGroup.Prepend>\n                        </InputGroup>\n                    </Col>\n                </Row>\n            }\n\n            {\n                mobileLobbyState === MobileLobbyState.SIGNATURE &&\n                <Row className={'text-center'}>\n                    <Col lg={'12'}>\n                        You're in a session!\n\n                        <InputGroup className='mb-3'>\n                            <FormControl value={playerName} onChange={e => setPlayerName(e.target.value)} aria-describedby='basic-addon1' />\n                            <InputGroup.Prepend>\n                                <Button onClick={() => handleSubmitSignature(playerName)} variant='outline-secondary'>Submit</Button>\n                            </InputGroup.Prepend>\n                        </InputGroup>\n                    </Col>\n                </Row>\n            }\n\n            {\n                mobileLobbyState === MobileLobbyState.WAITING &&\n                <Row className={'text-center'}>\n                    <Col lg={'12'}>\n                        You're waiting!\n                    </Col>\n                </Row>\n            }\n        </Container>\n    );\n};\n\nexport default MobileLobby;\n","import React, { useState, useEffect } from 'react';\nimport {BrowserView, MobileView} from 'react-device-detect';\n\nimport BrowserBoard from './components/BrowserBoard';\nimport BrowserLobby from './components/BrowserLobby';\n\nimport MobileWrapper from \"./components/MobileWrapper\";\nimport MobileBoard from './components/MobileBoard';\nimport MobileLobby from './components/MobileLobby';\n\nimport { GameState } from './constants/GameState';\nimport {SocketContext, socket} from './context/socket';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './stylesheets/Game.css';\n\nconst Game = () => {\n    const [gameState, setGameState] = useState(GameState.LOBBY);\n    const [categories, setCategories] = useState([]);\n\n    useEffect(() => {\n        socket.onAny((event, ...args) => {\n            console.log(`Heard (${event})`);\n        });\n\n        socket.on('set_game_state', (newGameState) => {\n            setGameState(newGameState);\n        });\n\n        socket.on('categories', (categories) => {\n            setCategories(categories);\n        });\n    }, []);\n\n    let browserView = null;\n    let mobileView = null;\n\n    switch (gameState) {\n        case GameState.LOBBY:\n            browserView = <BrowserLobby />;\n            mobileView = <MobileLobby />;\n            break;\n        case GameState.BOARD:\n            browserView = <BrowserBoard categories={categories} />;\n            mobileView = <MobileBoard />;\n            break;\n        default:\n            browserView = <BrowserLobby />;\n            mobileView = <MobileLobby />;\n            break;\n    }\n\n    return (\n        <SocketContext.Provider value={socket}>\n            <BrowserView>\n                {browserView}\n            </BrowserView>\n\n            <MobileView>\n                <MobileWrapper>\n                    {mobileView}\n                </MobileWrapper>\n            </MobileView>\n        </SocketContext.Provider>\n    );\n};\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './Game';\n\nimport {socket} from './context/socket';\n\nsocket.on('connect_device', () => {\n    socket.emit('connect_device', /Mobi/.test(navigator.userAgent));\n});\n\nReactDOM.render(<Game />, document.getElementById('root'));\n"],"sourceRoot":""}