{"version":3,"sources":["components/BrowserBoard.jsx","context/socket.js","components/BrowserLobby.jsx","components/MobileWrapper.jsx","components/MobileBoard.jsx","components/MobileLobby.jsx","constants/GameState.js","Game.js","index.js"],"names":["BrowserBoard","socket","io","SocketContext","createContext","BrowserLobby","useState","sessionName","setSessionName","useContext","on","MobileWrapper","props","alert","children","MobileBoard","MobileLobby","handleJoinSession","useCallback","emit","InputGroup","className","FormControl","value","onChange","e","target","aria-describedby","Prepend","Button","onClick","variant","GameState","Game","gameState","browserView","mobileView","Provider","test","navigator","userAgent","ReactDOM","render","document","getElementById"],"mappings":"iKAUeA,EARM,WACjB,OACI,iE,QCDKC,E,MAASC,KACTC,EAAgBC,0BCgBdC,EAhBM,WAAO,IAAD,EACeC,mBAAS,IADxB,mBAChBC,EADgB,KACHC,EADG,KAQvB,OANeC,qBAAWN,GAEnBO,GAAG,gBAAgB,SAACH,GACvBC,EAAeD,MAIf,gEACiC,uBADjC,iBAEmBA,MCGZI,EAdO,SAACC,GAOnB,OANeH,qBAAWN,GAEnBO,GAAG,cAAc,WACpBG,MAAM,gCAIN,8BACKD,EAAME,YCHJC,EARK,WAChB,OACI,gE,wBCsCOC,EAnCK,WAAO,IAAD,EACgBV,mBAAS,IADzB,mBACfC,EADe,KACFC,EADE,KAEhBP,EAASQ,qBAAWN,GAEpBc,EAAoBC,uBAAY,SAACX,GACnCN,EAAOkB,KAAK,eAAgBZ,KAC7B,IAcH,OAZAN,EAAOS,GAAG,wBAAwB,SAACH,GAC/BM,MAAM,uBAAD,OAAwBN,EAAxB,MAELC,EAAe,OAGnBP,EAAOS,GAAG,wBAAwB,SAACH,GAC/BM,MAAM,0BAAD,OAA2BN,EAA3B,MAELC,EAAe,OAIf,+DAGI,eAACY,EAAA,EAAD,CAAYC,UAAU,OAAtB,UACI,cAACC,EAAA,EAAD,CAAaC,MAAOhB,EAAaiB,SAAU,SAAAC,GAAC,OAAIjB,EAAeiB,EAAEC,OAAOH,QAAQI,mBAAiB,iBACjG,cAACP,EAAA,EAAWQ,QAAZ,UACI,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMb,EAAkBV,IAAcwB,QAAQ,oBAA/D,2BCjCPC,G,MACF,SADEA,EAEF,QCgDIC,EApCF,WAAO,IAAD,EACmB3B,mBAAS0B,GAD5B,mBACRE,EADQ,KAGXC,GAHW,KAGG,MACdC,EAAa,KAEjB,OAAQF,GACJ,KAAKF,EACDG,EAAc,cAAC,EAAD,IACdC,EAAa,cAAC,EAAD,IACb,MACJ,KAAKJ,EACDG,EAAc,cAAC,EAAD,IACdC,EAAa,cAAC,EAAD,IACb,MACJ,QACID,EAAc,cAAC,EAAD,IACdC,EAAa,cAAC,EAAD,IAIrB,OACI,eAACjC,EAAckC,SAAf,CAAwBd,MAAOtB,EAA/B,UACI,cAAC,cAAD,UACKkC,IAGL,cAAC,aAAD,UACI,cAAC,EAAD,UACKC,UCtCrBnC,EAAOS,GAAG,kBAAkB,WACxBT,EAAOkB,KAAK,iBAAkB,OAAOmB,KAAKC,UAAUC,eAGxDC,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.89278e52.chunk.js","sourcesContent":["import React from \"react\";\n\nconst BrowserBoard = () => {\n    return (\n        <div>\n            Welcome to the browser board!\n        </div>\n    );\n};\n\nexport default BrowserBoard;\n","import React, { createContext } from \"react\";\nimport io from 'socket.io-client';\n\nexport const socket = io();\nexport const SocketContext = createContext();\n","import React, {useContext, useState } from \"react\";\n\nimport {SocketContext} from '../context/socket';\n\nconst BrowserLobby = () => {\n    const [sessionName, setSessionName] = useState('');\n    const socket = useContext(SocketContext);\n\n    socket.on('session_name', (sessionName) => {\n        setSessionName(sessionName);\n    });\n\n    return (\n        <div>\n            Welcome to the browser lobby!<br />\n            Session name: {sessionName}\n        </div>\n    );\n};\n\nexport default BrowserLobby;\n","import React, {useContext} from \"react\";\n\nimport {SocketContext} from '../context/socket';\n\nconst MobileWrapper = (props) => {\n    const socket = useContext(SocketContext);\n\n    socket.on('disconnect', () => {\n        alert(`You've been disconnected!`);\n    });\n\n    return (\n        <div>\n            {props.children}\n        </div>\n    );\n};\n\nexport default MobileWrapper;\n","import React from \"react\";\n\nconst MobileBoard = () => {\n    return (\n        <div>\n            Welcome to the mobile board!\n        </div>\n    );\n};\n\nexport default MobileBoard;\n","import React, { useContext, useCallback, useState } from \"react\";\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\n\nimport {SocketContext} from '../context/socket';\n\nconst MobileLobby = () => {\n    const [sessionName, setSessionName] = useState('');\n    const socket = useContext(SocketContext);\n\n    const handleJoinSession = useCallback((sessionName) => {\n        socket.emit('join_session', sessionName);\n    }, []);\n\n    socket.on('join_session_success', (sessionName) => {\n        alert(`You joined session (${sessionName})`);\n\n        setSessionName('');\n    });\n\n    socket.on('join_session_failure', (sessionName) => {\n        alert(`Couldn't find session (${sessionName})`);\n\n        setSessionName('');\n    });\n\n    return (\n        <div>\n            Welcome to the mobile lobby!\n\n            <InputGroup className=\"mb-3\">\n                <FormControl value={sessionName} onChange={e => setSessionName(e.target.value)} aria-describedby=\"basic-addon1\" />\n                <InputGroup.Prepend>\n                    <Button onClick={() => handleJoinSession(sessionName)} variant=\"outline-secondary\">Join</Button>\n                </InputGroup.Prepend>\n            </InputGroup>\n\n        </div>\n    );\n};\n\nexport default MobileLobby;\n","// functions like an enum\nexport const GameState = {\n    LOBBY: \"lobby\",\n    BOARD: \"board\",\n    CLOSED_CLUE: \"closedClue\",\n    OPEN_CLUE: \"openClue\",\n    DECISION: \"decision\",\n    ANSWER: \"answer\",\n    SCOREBOARD: \"scoreboard\"\n};\n","import React, { useState } from 'react';\nimport {BrowserView, MobileView} from 'react-device-detect';\n\nimport BrowserBoard from './components/BrowserBoard';\nimport BrowserLobby from './components/BrowserLobby';\n\nimport MobileWrapper from \"./components/MobileWrapper\";\nimport MobileBoard from './components/MobileBoard';\nimport MobileLobby from './components/MobileLobby';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { GameState } from './constants/GameState';\nimport {SocketContext, socket} from './context/socket';\n\nconst Game = () => {\n    const [gameState, setGameState] = useState(GameState.LOBBY);\n\n    let browserView = null;\n    let mobileView = null;\n\n    switch (gameState) {\n        case GameState.LOBBY:\n            browserView = <BrowserLobby />;\n            mobileView = <MobileLobby />;\n            break;\n        case GameState.BOARD:\n            browserView = <BrowserBoard />;\n            mobileView = <MobileBoard />;\n            break;\n        default:\n            browserView = <BrowserLobby />;\n            mobileView = <MobileLobby />;\n            break;\n    }\n\n    return (\n        <SocketContext.Provider value={socket}>\n            <BrowserView>\n                {browserView}\n            </BrowserView>\n\n            <MobileView>\n                <MobileWrapper>\n                    {mobileView}\n                </MobileWrapper>\n            </MobileView>\n        </SocketContext.Provider>\n    );\n};\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './Game';\n\nimport {socket} from './context/socket';\n\nsocket.on('connect_device', () => {\n    socket.emit('connect_device', /Mobi/.test(navigator.userAgent));\n});\n\nReactDOM.render(<Game />, document.getElementById('root'));\n"],"sourceRoot":""}